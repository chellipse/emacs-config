((websocket :source #1="elpaca-menu-lock-file" :recipe
            (:package "websocket" :repo "ahyatt/emacs-websocket"
                      :fetcher github :files
                      ("*.el" "*.el.in" "dir" "*.info" "*.texi"
                       "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi"
                       "doc/*.texinfo" "lisp/*.el" "docs/dir"
                       "docs/*.info" "docs/*.texi" "docs/*.texinfo"
                       (:exclude ".dir-locals.el" "test.el" "tests.el"
                                 "*-test.el" "*-tests.el" "LICENSE"
                                 "README*" "*-pkg.el"))
                      :source "MELPA" :protocol https :inherit t
                      :depth treeless :ref
                      "40c208eaab99999d7c1e4bea883648da24c03be3"))
 (simple-httpd :source #1# :recipe
               (:package "simple-httpd" :repo
                         "skeeto/emacs-web-server" :fetcher github
                         :files
                         ("*.el" "*.el.in" "dir" "*.info" "*.texi"
                          "*.texinfo" "doc/dir" "doc/*.info"
                          "doc/*.texi" "doc/*.texinfo" "lisp/*.el"
                          "docs/dir" "docs/*.info" "docs/*.texi"
                          "docs/*.texinfo"
                          (:exclude ".dir-locals.el" "test.el"
                                    "tests.el" "*-test.el"
                                    "*-tests.el" "LICENSE" "README*"
                                    "*-pkg.el"))
                         :source "MELPA" :protocol https :inherit t
                         :depth treeless :ref
                         "3982c55e9061475038a3ccd61aecb2de3d407cec"))
 (emacsql :source #1# :recipe
          (:package "emacsql" :fetcher github :repo "magit/emacsql"
                    :files (:defaults "README.md" "sqlite") :source
                    "MELPA" :protocol https :inherit t :depth treeless
                    :ref "ced062890061b6e4fbe4d00c0617f7ff84fff25c"))
 (avy :source #1# :recipe
      (:package "avy" :repo "abo-abo/avy" :fetcher github :files
                ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo"
                 "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo"
                 "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi"
                 "docs/*.texinfo"
                 (:exclude ".dir-locals.el" "test.el" "tests.el"
                           "*-test.el" "*-tests.el" "LICENSE"
                           "README*" "*-pkg.el"))
                :source #2="elpaca-menu-lock-file" :protocol https
                :inherit t :depth treeless :ref
                "933d1f36cca0f71e4acb5fac707e9ae26c536264"))
 (posframe :source #1# :recipe
           (:package "posframe" :fetcher github :repo
                     "tumashu/posframe" :files
                     ("*.el" "*.el.in" "dir" "*.info" "*.texi"
                      "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi"
                      "doc/*.texinfo" "lisp/*.el" "docs/dir"
                      "docs/*.info" "docs/*.texi" "docs/*.texinfo"
                      (:exclude ".dir-locals.el" "test.el" "tests.el"
                                "*-test.el" "*-tests.el" "LICENSE"
                                "README*" "*-pkg.el"))
                     :source #2# :protocol https :inherit t :depth
                     treeless :ref
                     "12f540c9ad5da09673b2bca1132b41f94c134e82"))
 (cfrs :source #1# :recipe
       (:package "cfrs" :repo "Alexander-Miller/cfrs" :fetcher github
                 :files
                 ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo"
                  "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo"
                  "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi"
                  "docs/*.texinfo"
                  (:exclude ".dir-locals.el" "test.el" "tests.el"
                            "*-test.el" "*-tests.el" "LICENSE"
                            "README*" "*-pkg.el"))
                 :source #2# :protocol https :inherit t :depth
                 treeless :ref
                 "f3a21f237b2a54e6b9f8a420a9da42b4f0a63121"))
 (hydra :source #1# :recipe
        (:package "hydra" :repo "abo-abo/hydra" :fetcher github :files
                  (:defaults (:exclude "lv.el")) :source #2# :protocol
                  https :inherit t :depth treeless :ref
                  "59a2a45a35027948476d1d7751b0f0215b1e61aa"))
 (pfuture :source #1# :recipe
          (:package "pfuture" :repo "Alexander-Miller/pfuture"
                    :fetcher github :files
                    ("*.el" "*.el.in" "dir" "*.info" "*.texi"
                     "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi"
                     "doc/*.texinfo" "lisp/*.el" "docs/dir"
                     "docs/*.info" "docs/*.texi" "docs/*.texinfo"
                     (:exclude ".dir-locals.el" "test.el" "tests.el"
                               "*-test.el" "*-tests.el" "LICENSE"
                               "README*" "*-pkg.el"))
                    :source #2# :protocol https :inherit t :depth
                    treeless :ref
                    "19b53aebbc0f2da31de6326c495038901bffb73c"))
 (ace-window :source #1# :recipe
             (:package "ace-window" :repo "abo-abo/ace-window"
                       :fetcher github :files
                       ("*.el" "*.el.in" "dir" "*.info" "*.texi"
                        "*.texinfo" "doc/dir" "doc/*.info"
                        "doc/*.texi" "doc/*.texinfo" "lisp/*.el"
                        "docs/dir" "docs/*.info" "docs/*.texi"
                        "docs/*.texinfo"
                        (:exclude ".dir-locals.el" "test.el"
                                  "tests.el" "*-test.el" "*-tests.el"
                                  "LICENSE" "README*" "*-pkg.el"))
                       :source #2# :protocol https :inherit t :depth
                       treeless :ref
                       "77115afc1b0b9f633084cf7479c767988106c196"))
 (with-editor :source #1#
   :recipe
   (:package "with-editor" :fetcher github :repo "magit/with-editor"
             :files
             ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo"
              "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo"
              "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi"
              "docs/*.texinfo"
              (:exclude ".dir-locals.el" "test.el" "tests.el"
                        "*-test.el" "*-tests.el" "LICENSE" "README*"
                        "*-pkg.el"))
             :source #2# :protocol https :inherit t :depth treeless
             :ref "ca902ae02972bdd6919a902be2593d8cb6bd991b"))
 (magit-section :source #1# :recipe
                (:package "magit-section" :fetcher github :repo
                          "magit/magit" :files
                          ("lisp/magit-section.el"
                           "docs/magit-section.texi"
                           "magit-section-pkg.el")
                          :source #2# :protocol https :inherit t
                          :depth treeless :ref
                          "531e7ca6190e71e6d500ddd1a1f6e5cf8402aeca"))
 (llama :source #1# :recipe
        (:package "llama" :fetcher github :repo "tarsius/llama" :files
                  ("llama.el" ".dir-locals.el") :source #2# :protocol
                  https :inherit t :depth treeless :ref
                  "48e5bc4919a4a29665362832d59ade8e248b0c3e"))
 (inheritenv :source #1# :recipe
             (:package "inheritenv" :fetcher github :repo
                       "purcell/inheritenv" :files
                       ("*.el" "*.el.in" "dir" "*.info" "*.texi"
                        "*.texinfo" "doc/dir" "doc/*.info"
                        "doc/*.texi" "doc/*.texinfo" "lisp/*.el"
                        "docs/dir" "docs/*.info" "docs/*.texi"
                        "docs/*.texinfo"
                        (:exclude ".dir-locals.el" "test.el"
                                  "tests.el" "*-test.el" "*-tests.el"
                                  "LICENSE" "README*" "*-pkg.el"))
                       :source #2# :protocol https :inherit t :depth
                       treeless :ref
                       "b9e67cc20c069539698a9ac54d0e6cc11e616c6f"))
 (wgrep :source #1# :recipe
        (:package "wgrep" :fetcher github :repo
                  "mhayashi1120/Emacs-wgrep" :files ("wgrep.el")
                  :source #2# :protocol https :inherit t :depth
                  treeless :ref
                  "49f09ab9b706d2312cab1199e1eeb1bcd3f27f6f"))
 (lv :source #1# :recipe
     (:package "lv" :repo "abo-abo/hydra" :fetcher github :files
               ("lv.el") :source #2# :protocol https :inherit t :depth
               treeless :ref
               "59a2a45a35027948476d1d7751b0f0215b1e61aa"))
 (markdown-mode :source #1# :recipe
                (:package "markdown-mode" :fetcher github :repo
                          "jrblevin/markdown-mode" :files
                          ("*.el" "*.el.in" "dir" "*.info" "*.texi"
                           "*.texinfo" "doc/dir" "doc/*.info"
                           "doc/*.texi" "doc/*.texinfo" "lisp/*.el"
                           "docs/dir" "docs/*.info" "docs/*.texi"
                           "docs/*.texinfo"
                           (:exclude ".dir-locals.el" "test.el"
                                     "tests.el" "*-test.el"
                                     "*-tests.el" "LICENSE" "README*"
                                     "*-pkg.el"))
                          :source #2# :protocol https :inherit t
                          :depth treeless :ref
                          "90ad4af79a8bb65a3a5cdd6314be44abd9517cfc"))
 (spinner :source #1# :recipe
          (:package "spinner" :repo
                    ("https://github.com/Malabarba/spinner.el"
                     . "spinner")
                    :files ("*" (:exclude ".git")) :source #2#
                    :protocol https :inherit t :depth treeless :ref
                    "d4647ae87fb0cd24bc9081a3d287c860ff061c21"))
 (ht :source #1# :recipe
     (:package "ht" :fetcher github :repo "Wilfred/ht.el" :files
               ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo"
                "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo"
                "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi"
                "docs/*.texinfo"
                (:exclude ".dir-locals.el" "test.el" "tests.el"
                          "*-test.el" "*-tests.el" "LICENSE" "README*"
                          "*-pkg.el"))
               :source #2# :protocol https :inherit t :depth treeless
               :ref "1c49aad1c820c86f7ee35bf9fff8429502f60fef"))
 (tsc :source #1# :recipe
      (:package "tsc" :fetcher github :repo
                "emacs-tree-sitter/elisp-tree-sitter" :branch
                "release" :files
                ("core/*.el" "core/Cargo.toml" "core/Cargo.lock"
                 "core/src")
                :source #2# :protocol https :inherit t :depth treeless
                :ref "3cfab8a0e945db9b3df84437f27945746a43cc71"))
 (queue :source #1# :recipe
        (:package "queue" :repo
                  ("https://github.com/emacsmirror/gnu_elpa" . "queue")
                  :branch "externals/queue" :files
                  ("*" (:exclude ".git")) :source #2# :protocol https
                  :inherit t :depth treeless :ref
                  "f986fb68e75bdae951efb9e11a3012ab6bd408ee"))
 (annalist :source #1# :recipe
           (:package "annalist" :fetcher github :repo
                     "noctuid/annalist.el" :files
                     ("*.el" "*.el.in" "dir" "*.info" "*.texi"
                      "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi"
                      "doc/*.texinfo" "lisp/*.el" "docs/dir"
                      "docs/*.info" "docs/*.texi" "docs/*.texinfo"
                      (:exclude ".dir-locals.el" "test.el" "tests.el"
                                "*-test.el" "*-tests.el" "LICENSE"
                                "README*" "*-pkg.el"))
                     :source #2# :protocol https :inherit t :depth
                     treeless :ref
                     "e1ef5dad75fa502d761f70d9ddf1aeb1c423f41d"))
 (goto-chg :source #1# :recipe
           (:package "goto-chg" :repo "emacs-evil/goto-chg" :fetcher
                     github :files
                     ("*.el" "*.el.in" "dir" "*.info" "*.texi"
                      "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi"
                      "doc/*.texinfo" "lisp/*.el" "docs/dir"
                      "docs/*.info" "docs/*.texi" "docs/*.texinfo"
                      (:exclude ".dir-locals.el" "test.el" "tests.el"
                                "*-test.el" "*-tests.el" "LICENSE"
                                "README*" "*-pkg.el"))
                     :source #2# :protocol https :inherit t :depth
                     treeless :ref
                     "72f556524b88e9d30dc7fc5b0dc32078c166fda7"))
 (visual-fill-column :source #1# :recipe
                     (:package "visual-fill-column" :fetcher codeberg
                               :repo "joostkremers/visual-fill-column"
                               :files
                               ("*.el" "*.el.in" "dir" "*.info"
                                "*.texi" "*.texinfo" "doc/dir"
                                "doc/*.info" "doc/*.texi"
                                "doc/*.texinfo" "lisp/*.el" "docs/dir"
                                "docs/*.info" "docs/*.texi"
                                "docs/*.texinfo"
                                (:exclude ".dir-locals.el" "test.el"
                                          "tests.el" "*-test.el"
                                          "*-tests.el" "LICENSE"
                                          "README*" "*-pkg.el"))
                               :source #2# :protocol https :inherit t
                               :depth treeless :ref
                               "e391b52922086ac38397a3325933900b6d90f9f0"))
 (f :source #1# :recipe
    (:package "f" :fetcher github :repo "rejeep/f.el" :files
              ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo"
               "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo"
               "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi"
               "docs/*.texinfo"
               (:exclude ".dir-locals.el" "test.el" "tests.el"
                         "*-test.el" "*-tests.el" "LICENSE" "README*"
                         "*-pkg.el"))
              :source #2# :protocol https :inherit t :depth treeless
              :ref "931b6d0667fe03e7bf1c6c282d6d8d7006143c52"))
 (dash :source #1# :recipe
       (:package "dash" :fetcher github :repo "magnars/dash.el" :files
                 ("dash.el" "dash.texi") :source #2# :protocol https
                 :inherit t :depth treeless :ref
                 "fcb5d831fc08a43f984242c7509870f30983c27c"))
 (s :source #1# :recipe
    (:package "s" :fetcher github :repo "magnars/s.el" :files
              ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo"
               "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo"
               "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi"
               "docs/*.texinfo"
               (:exclude ".dir-locals.el" "test.el" "tests.el"
                         "*-test.el" "*-tests.el" "LICENSE" "README*"
                         "*-pkg.el"))
              :source #2# :protocol https :inherit t :depth treeless
              :ref "dda84d38fffdaf0c9b12837b504b402af910d01d"))
 (shrink-path :source #1# :recipe
              (:package "shrink-path" :fetcher gitlab :repo
                        "bennya/shrink-path.el" :files
                        ("*.el" "*.el.in" "dir" "*.info" "*.texi"
                         "*.texinfo" "doc/dir" "doc/*.info"
                         "doc/*.texi" "doc/*.texinfo" "lisp/*.el"
                         "docs/dir" "docs/*.info" "docs/*.texi"
                         "docs/*.texinfo"
                         (:exclude ".dir-locals.el" "test.el"
                                   "tests.el" "*-test.el" "*-tests.el"
                                   "LICENSE" "README*" "*-pkg.el"))
                        :source #2# :protocol https :inherit t :depth
                        treeless :ref
                        "c14882c8599aec79a6e8ef2d06454254bb3e1e41"))
 (nerd-icons :source #1# :recipe
             (:package "nerd-icons" :repo
                       "rainstormstudio/nerd-icons.el" :fetcher github
                       :files (:defaults "data") :source #2# :protocol
                       https :inherit t :depth treeless :ref
                       "14f7278dd7eb5eca762a6ff32467c72c661c0aae"))
 (org-fragtog :source #1# :recipe
              (:package "org-fragtog" :fetcher github :repo
                        "io12/org-fragtog" :files
                        ("*.el" "*.el.in" "dir" "*.info" "*.texi"
                         "*.texinfo" "doc/dir" "doc/*.info"
                         "doc/*.texi" "doc/*.texinfo" "lisp/*.el"
                         "docs/dir" "docs/*.info" "docs/*.texi"
                         "docs/*.texinfo"
                         (:exclude ".dir-locals.el" "test.el"
                                   "tests.el" "*-test.el" "*-tests.el"
                                   "LICENSE" "README*" "*-pkg.el"))
                        :source #2# :protocol https :inherit t :depth
                        treeless :ref
                        "562f6590843eeab30ac8aa2ced285aff8d590861"))
 (gnuplot :source #1# :recipe
          (:package "gnuplot" :repo "emacs-gnuplot/gnuplot" :fetcher
                    github :files
                    ("gnuplot.el" "gnuplot-gui.el"
                     "gnuplot-context.el")
                    :source #2# :protocol https :inherit t :depth
                    treeless :ref
                    "f78da5b3394439f8f4f30a4aa30637eaf2bec63b"))
 (org-appear :source #1# :recipe
             (:package "org-appear" :fetcher github :repo
                       "awth13/org-appear" :files
                       ("*.el" "*.el.in" "dir" "*.info" "*.texi"
                        "*.texinfo" "doc/dir" "doc/*.info"
                        "doc/*.texi" "doc/*.texinfo" "lisp/*.el"
                        "docs/dir" "docs/*.info" "docs/*.texi"
                        "docs/*.texinfo"
                        (:exclude ".dir-locals.el" "test.el"
                                  "tests.el" "*-test.el" "*-tests.el"
                                  "LICENSE" "README*" "*-pkg.el"))
                       :source #2# :protocol https :inherit t :depth
                       treeless :ref
                       "32ee50f8fdfa449bbc235617549c1bccb503cb09"))
 (org-superstar :source #1# :recipe
                (:package "org-superstar" :fetcher github :repo
                          "integral-dw/org-superstar-mode" :files
                          ("*.el" "*.el.in" "dir" "*.info" "*.texi"
                           "*.texinfo" "doc/dir" "doc/*.info"
                           "doc/*.texi" "doc/*.texinfo" "lisp/*.el"
                           "docs/dir" "docs/*.info" "docs/*.texi"
                           "docs/*.texinfo"
                           (:exclude ".dir-locals.el" "test.el"
                                     "tests.el" "*-test.el"
                                     "*-tests.el" "LICENSE" "README*"
                                     "*-pkg.el"))
                          :source #2# :protocol https :inherit t
                          :depth treeless :ref
                          "54c81c27dde2a6dc461bb064e79a8b2089093a2e"))
 (evil-org :source #1# :recipe
           (:package "evil-org" :fetcher github :repo
                     "Somelauw/evil-org-mode" :files
                     ("*.el" "*.el.in" "dir" "*.info" "*.texi"
                      "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi"
                      "doc/*.texinfo" "lisp/*.el" "docs/dir"
                      "docs/*.info" "docs/*.texi" "docs/*.texinfo"
                      (:exclude ".dir-locals.el" "test.el" "tests.el"
                                "*-test.el" "*-tests.el" "LICENSE"
                                "README*" "*-pkg.el"))
                     :source #2# :protocol https :inherit t :depth
                     treeless :ref
                     "b1f309726b1326e1a103742524ec331789f2bf94"))
 (org-roam-ui :source #1# :recipe
              (:package "org-roam-ui" :fetcher github :repo
                        "org-roam/org-roam-ui" :files
                        (:defaults "out") :source "MELPA" :protocol
                        https :inherit t :depth treeless :ref
                        "5ac74960231db0bf7783c2ba7a19a60f582e91ab"))
 (org-roam :source #1# :recipe
           (:package "org-roam" :fetcher github :repo
                     "org-roam/org-roam" :files
                     (:defaults "extensions/*") :source "MELPA"
                     :protocol https :inherit t :depth treeless :ref
                     "031ee63bee7ecffee2eebb0faae37a37e2b8a603"))
 (elfeed :source #1# :recipe
         (:package "elfeed" :repo "skeeto/elfeed" :fetcher github
                   :files (:defaults "README.md") :source #2#
                   :protocol https :inherit t :depth treeless :ref
                   "a39fb78e34ee25dc8baea83376f929d7c128344f"))
 (gptel :source #1# :recipe
        (:package "gptel" :repo "karthink/gptel" :fetcher github
                  :files
                  ("*.el" "*.el.in" "dir" "*.info" "*.texi"
                   "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi"
                   "doc/*.texinfo" "lisp/*.el" "docs/dir"
                   "docs/*.info" "docs/*.texi" "docs/*.texinfo"
                   (:exclude ".dir-locals.el" "test.el" "tests.el"
                             "*-test.el" "*-tests.el" "LICENSE"
                             "README*" "*-pkg.el"))
                  :source #2# :protocol https :inherit t :depth
                  treeless :ref
                  "fd9200b55979c9b262b269a2e4b5eb62ffc4253c"))
 (w3m :source #1# :recipe
      (:package "w3m" :fetcher github :repo "emacs-w3m/emacs-w3m"
                :files
                (:defaults "icons"
                           (:exclude "octet.el" "mew-w3m.el"
                                     "w3m-xmas.el" "doc/*.texi"))
                :source #2# :protocol https :inherit t :depth treeless
                :ref "fc0f30f96a69bae4d4c92f42bceafb8ccf2a72ec"))
 (treemacs-magit :source #1# :recipe
                 (:package "treemacs-magit" :fetcher github :repo
                           "Alexander-Miller/treemacs" :files
                           ("src/extra/treemacs-magit.el") :source #2#
                           :protocol https :inherit t :depth treeless
                           :ref
                           "820b09db106a48db76d95e3a266d1e67ae1b6bdb"))
 (treemacs-icons-dired :source #1# :recipe
                       (:package "treemacs-icons-dired" :fetcher
                                 github :repo
                                 "Alexander-Miller/treemacs" :files
                                 ("src/extra/treemacs-icons-dired.el")
                                 :source #2# :protocol https :inherit
                                 t :depth treeless :ref
                                 "820b09db106a48db76d95e3a266d1e67ae1b6bdb"))
 (treemacs-projectile :source #1# :recipe
                      (:package "treemacs-projectile" :fetcher github
                                :repo "Alexander-Miller/treemacs"
                                :files
                                ("src/extra/treemacs-projectile.el")
                                :source #2# :protocol https :inherit t
                                :depth treeless :ref
                                "820b09db106a48db76d95e3a266d1e67ae1b6bdb"))
 (treemacs-evil :source #1# :recipe
                (:package "treemacs-evil" :fetcher github :repo
                          "Alexander-Miller/treemacs" :files
                          ("src/extra/treemacs-evil.el") :source #2#
                          :protocol https :inherit t :depth treeless
                          :ref
                          "820b09db106a48db76d95e3a266d1e67ae1b6bdb"))
 (treemacs :source #1# :recipe
           (:package "treemacs" :fetcher github :repo
                     "Alexander-Miller/treemacs" :files
                     (:defaults "Changelog.org" "icons"
                                "src/elisp/treemacs*.el"
                                "src/scripts/treemacs*.py"
                                (:exclude "src/extra/*"))
                     :source #2# :protocol https :inherit t :depth
                     treeless :ref
                     "820b09db106a48db76d95e3a266d1e67ae1b6bdb"))
 (all-the-icons :source #1# :recipe
                (:package "all-the-icons" :repo
                          "domtronn/all-the-icons.el" :fetcher github
                          :files (:defaults "data") :source #2#
                          :protocol https :inherit t :depth treeless
                          :ref
                          "39ef44f810c34e8900978788467cc675870bcd19"))
 (ranger :source #1# :recipe
         (:package "ranger" :fetcher github :repo
                   "punassuming/ranger.el" :old-names (evil-ranger)
                   :files
                   ("*.el" "*.el.in" "dir" "*.info" "*.texi"
                    "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi"
                    "doc/*.texinfo" "lisp/*.el" "docs/dir"
                    "docs/*.info" "docs/*.texi" "docs/*.texinfo"
                    (:exclude ".dir-locals.el" "test.el" "tests.el"
                              "*-test.el" "*-tests.el" "LICENSE"
                              "README*" "*-pkg.el"))
                   :source #2# :protocol https :inherit t :depth
                   treeless :ref
                   "2498519cb21dcd5791d240607a72a204d1761668"))
 (magit :source #1# :recipe
        (:package "magit" :fetcher github :repo "magit/magit" :files
                  ("lisp/magit*.el" "lisp/git-*.el" "docs/magit.texi"
                   "docs/AUTHORS.md" "LICENSE" ".dir-locals.el"
                   (:exclude "lisp/magit-section.el"))
                  :source #2# :protocol https :inherit t :depth
                  treeless :ref
                  "531e7ca6190e71e6d500ddd1a1f6e5cf8402aeca"))
 (transient :source #1# :recipe
            (:package "transient" :fetcher github :repo
                      "magit/transient" :files
                      ("*.el" "*.el.in" "dir" "*.info" "*.texi"
                       "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi"
                       "doc/*.texinfo" "lisp/*.el" "docs/dir"
                       "docs/*.info" "docs/*.texi" "docs/*.texinfo"
                       (:exclude ".dir-locals.el" "test.el" "tests.el"
                                 "*-test.el" "*-tests.el" "LICENSE"
                                 "README*" "*-pkg.el"))
                      :source #2# :protocol https :inherit t :depth
                      treeless :ref
                      "25b994a565ce8035330b0a3071ee430c0282349e"))
 (envrc :source #1# :recipe
        (:package "envrc" :fetcher github :repo "purcell/envrc" :files
                  ("*.el" "*.el.in" "dir" "*.info" "*.texi"
                   "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi"
                   "doc/*.texinfo" "lisp/*.el" "docs/dir"
                   "docs/*.info" "docs/*.texi" "docs/*.texinfo"
                   (:exclude ".dir-locals.el" "test.el" "tests.el"
                             "*-test.el" "*-tests.el" "LICENSE"
                             "README*" "*-pkg.el"))
                  :source #2# :protocol https :inherit t :depth
                  treeless :ref
                  "4ca2166ac72e756d314fc2348ce1c93d807c1a14"))
 (direnv :source #1# :recipe
         (:package "direnv" :fetcher github :repo
                   "wbolster/emacs-direnv" :files
                   ("*.el" "*.el.in" "dir" "*.info" "*.texi"
                    "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi"
                    "doc/*.texinfo" "lisp/*.el" "docs/dir"
                    "docs/*.info" "docs/*.texi" "docs/*.texinfo"
                    (:exclude ".dir-locals.el" "test.el" "tests.el"
                              "*-test.el" "*-tests.el" "LICENSE"
                              "README*" "*-pkg.el"))
                   :source #2# :protocol https :inherit t :depth
                   treeless :ref
                   "c0bf3b81c7a97e2a0d06d05495e86848254fcc1f"))
 (rg :source #1# :recipe
     (:package "rg" :fetcher github :repo "dajva/rg.el" :files
               ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo"
                "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo"
                "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi"
                "docs/*.texinfo"
                (:exclude ".dir-locals.el" "test.el" "tests.el"
                          "*-test.el" "*-tests.el" "LICENSE" "README*"
                          "*-pkg.el"))
               :source #2# :protocol https :inherit t :depth treeless
               :ref "94813ba3a7ccf3af68beb23a2c39154a99e8c9ec"))
 (projectile :source #1# :recipe
             (:package "projectile" :fetcher github :repo
                       "bbatsov/projectile" :files
                       ("*.el" "*.el.in" "dir" "*.info" "*.texi"
                        "*.texinfo" "doc/dir" "doc/*.info"
                        "doc/*.texi" "doc/*.texinfo" "lisp/*.el"
                        "docs/dir" "docs/*.info" "docs/*.texi"
                        "docs/*.texinfo"
                        (:exclude ".dir-locals.el" "test.el"
                                  "tests.el" "*-test.el" "*-tests.el"
                                  "LICENSE" "README*" "*-pkg.el"))
                       :source #2# :protocol https :inherit t :depth
                       treeless :ref
                       "4dd84b02c9cd7b04616dc2d01ba7bc87f0d15be8"))
 (lsp-ui :source #1# :recipe
         (:package "lsp-ui" :repo "emacs-lsp/lsp-ui" :fetcher github
                   :files (:defaults "lsp-ui-doc.html" "resources")
                   :source #2# :protocol https :inherit t :depth
                   treeless :ref
                   "a0dde8b52b4411cbac2eb053ef1515635ea0b7ed"))
 (lsp-mode :source #1# :recipe
           (:package "lsp-mode" :repo "emacs-lsp/lsp-mode" :fetcher
                     github :files (:defaults "clients/*.el") :source
                     #2# :protocol https :inherit t :depth treeless
                     :ref "54251da4ffcf1e604296352bb78ff6ce0377351b"))
 (fish-mode :source #1# :recipe
            (:package "fish-mode" :fetcher github :repo
                      "wwwjfy/emacs-fish" :files
                      ("*.el" "*.el.in" "dir" "*.info" "*.texi"
                       "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi"
                       "doc/*.texinfo" "lisp/*.el" "docs/dir"
                       "docs/*.info" "docs/*.texi" "docs/*.texinfo"
                       (:exclude ".dir-locals.el" "test.el" "tests.el"
                                 "*-test.el" "*-tests.el" "LICENSE"
                                 "README*" "*-pkg.el"))
                      :source "MELPA" :protocol https :inherit t
                      :depth treeless :ref
                      "2526b1803b58cf145bc70ff6ce2adb3f6c246f89"))
 (nix-ts-mode :source #1# :recipe
              (:package "nix-ts-mode" :fetcher github :repo
                        "nix-community/nix-ts-mode" :files
                        ("*.el" "*.el.in" "dir" "*.info" "*.texi"
                         "*.texinfo" "doc/dir" "doc/*.info"
                         "doc/*.texi" "doc/*.texinfo" "lisp/*.el"
                         "docs/dir" "docs/*.info" "docs/*.texi"
                         "docs/*.texinfo"
                         (:exclude ".dir-locals.el" "test.el"
                                   "tests.el" "*-test.el" "*-tests.el"
                                   "LICENSE" "README*" "*-pkg.el"))
                        :source #2# :protocol https :inherit t :depth
                        treeless :ref
                        "62ce3a2dc39529c5db3516427e84b2c96b8efcfd"))
 (rust-mode :source #1# :recipe
            (:package "rust-mode" :repo "rust-lang/rust-mode" :fetcher
                      github :files
                      ("*.el" "*.el.in" "dir" "*.info" "*.texi"
                       "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi"
                       "doc/*.texinfo" "lisp/*.el" "docs/dir"
                       "docs/*.info" "docs/*.texi" "docs/*.texinfo"
                       (:exclude ".dir-locals.el" "test.el" "tests.el"
                                 "*-test.el" "*-tests.el" "LICENSE"
                                 "README*" "*-pkg.el"))
                      :source #2# :protocol https :inherit t :depth
                      treeless :ref
                      "25d91cff281909e9b7cb84e31211c4e7b0480f94"))
 (yasnippet :source #1# :recipe
            (:package "yasnippet" :repo "joaotavora/yasnippet"
                      :fetcher github :files
                      ("yasnippet.el" "snippets") :source #2#
                      :protocol https :inherit t :depth treeless :ref
                      "2384fe1655c60e803521ba59a34c0a7e48a25d06"))
 (tree-sitter :source #1# :recipe
              (:package "tree-sitter" :fetcher github :repo
                        "emacs-tree-sitter/elisp-tree-sitter" :branch
                        "release" :files
                        ("*.el" "*.el.in" "dir" "*.info" "*.texi"
                         "*.texinfo" "doc/dir" "doc/*.info"
                         "doc/*.texi" "doc/*.texinfo" "lisp/*.el"
                         "docs/dir" "docs/*.info" "docs/*.texi"
                         "docs/*.texinfo"
                         (:exclude ".dir-locals.el" "test.el"
                                   "tests.el" "*-test.el" "*-tests.el"
                                   "LICENSE" "README*" "*-pkg.el"))
                        :source #2# :protocol https :inherit t :depth
                        treeless :ref
                        "3cfab8a0e945db9b3df84437f27945746a43cc71"))
 (tree-sitter-langs :source #1# :recipe
                    (:package "tree-sitter-langs" :repo
                              "emacs-tree-sitter/tree-sitter-langs"
                              :fetcher github :branch "release" :files
                              (:defaults "queries") :source #2#
                              :protocol https :inherit t :depth
                              treeless :ref
                              "4eb4989d1a708e81639a7ef7dbff43a34894caee"))
 (flycheck :source #1# :recipe
           (:package "flycheck" :repo "flycheck/flycheck" :fetcher
                     github :files
                     ("*.el" "*.el.in" "dir" "*.info" "*.texi"
                      "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi"
                      "doc/*.texinfo" "lisp/*.el" "docs/dir"
                      "docs/*.info" "docs/*.texi" "docs/*.texinfo"
                      (:exclude ".dir-locals.el" "test.el" "tests.el"
                                "*-test.el" "*-tests.el" "LICENSE"
                                "README*" "*-pkg.el"))
                     :source #2# :protocol https :inherit t :depth
                     treeless :ref
                     "6e43c07e83406cdd3f75952ee988d61d7573ec11"))
 (apheleia :source #1# :recipe
           (:package "apheleia" :fetcher github :repo
                     "radian-software/apheleia" :files
                     (:defaults ("scripts" "scripts/formatters"))
                     :source #2# :protocol https :inherit t :depth
                     treeless :ref
                     "0c41a5a52c6af7ef9ce44a6e93a5ebacdc679c91"))
 (cape :source #1# :recipe
       (:package "cape" :repo "minad/cape" :fetcher github :files
                 ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo"
                  "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo"
                  "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi"
                  "docs/*.texinfo"
                  (:exclude ".dir-locals.el" "test.el" "tests.el"
                            "*-test.el" "*-tests.el" "LICENSE"
                            "README*" "*-pkg.el"))
                 :source #2# :protocol https :inherit t :depth
                 treeless :ref
                 "753bed1ccccc814f043591782e9ef375c7fda5f8"))
 (orderless :source #1# :recipe
            (:package "orderless" :repo "oantolin/orderless" :fetcher
                      github :files
                      ("*.el" "*.el.in" "dir" "*.info" "*.texi"
                       "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi"
                       "doc/*.texinfo" "lisp/*.el" "docs/dir"
                       "docs/*.info" "docs/*.texi" "docs/*.texinfo"
                       (:exclude ".dir-locals.el" "test.el" "tests.el"
                                 "*-test.el" "*-tests.el" "LICENSE"
                                 "README*" "*-pkg.el"))
                      :source #2# :protocol https :inherit t :depth
                      treeless :ref
                      "254f2412489bbbf62700f9d3d5f18e537841dcc3"))
 (corfu :source #1# :recipe
        (:package "corfu" :repo "minad/corfu" :files
                  (:defaults "extensions/corfu-*.el") :fetcher github
                  :source #2# :protocol https :inherit t :depth
                  treeless :ref
                  "2e05fe8244fff22c3c3d2af4334b1850250212a9"))
 (marginalia :source #1# :recipe
             (:package "marginalia" :repo "minad/marginalia" :fetcher
                       github :files
                       ("*.el" "*.el.in" "dir" "*.info" "*.texi"
                        "*.texinfo" "doc/dir" "doc/*.info"
                        "doc/*.texi" "doc/*.texinfo" "lisp/*.el"
                        "docs/dir" "docs/*.info" "docs/*.texi"
                        "docs/*.texinfo"
                        (:exclude ".dir-locals.el" "test.el"
                                  "tests.el" "*-test.el" "*-tests.el"
                                  "LICENSE" "README*" "*-pkg.el"))
                       :source #2# :protocol https :inherit t :depth
                       treeless :ref
                       "2ff4d690f78fb86573c11a32631e53627947ebee"))
 (consult-flycheck :source #1# :recipe
                   (:package "consult-flycheck" :fetcher github :repo
                             "minad/consult-flycheck" :files
                             ("*.el" "*.el.in" "dir" "*.info" "*.texi"
                              "*.texinfo" "doc/dir" "doc/*.info"
                              "doc/*.texi" "doc/*.texinfo" "lisp/*.el"
                              "docs/dir" "docs/*.info" "docs/*.texi"
                              "docs/*.texinfo"
                              (:exclude ".dir-locals.el" "test.el"
                                        "tests.el" "*-test.el"
                                        "*-tests.el" "LICENSE"
                                        "README*" "*-pkg.el"))
                             :source #2# :protocol https :inherit t
                             :depth treeless :ref
                             "77d3e790a322934ecb63ac0e8056b7a7b3d39fdf"))
 (consult :source #1# :recipe
          (:package "consult" :repo "minad/consult" :fetcher github
                    :files
                    ("*.el" "*.el.in" "dir" "*.info" "*.texi"
                     "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi"
                     "doc/*.texinfo" "lisp/*.el" "docs/dir"
                     "docs/*.info" "docs/*.texi" "docs/*.texinfo"
                     (:exclude ".dir-locals.el" "test.el" "tests.el"
                               "*-test.el" "*-tests.el" "LICENSE"
                               "README*" "*-pkg.el"))
                    :source #2# :protocol https :inherit t :depth
                    treeless :ref
                    "daa5276f7ad442483d2478a48192d9613c159de8"))
 (vertico :source #1# :recipe
          (:package "vertico" :repo "minad/vertico" :files
                    (:defaults "extensions/vertico-*.el") :fetcher
                    github :source #2# :protocol https :inherit t
                    :depth treeless :ref
                    "304be874be3d6198f80f987c1b433c816c4e1d3f"))
 (undo-tree :source #1# :recipe
            (:package "undo-tree" :repo
                      ("https://gitlab.com/tsc25/undo-tree"
                       . "undo-tree")
                      :files ("*" (:exclude ".git")) :source #2#
                      :protocol https :inherit t :depth treeless :ref
                      "2bf5e230f1d11df7bbd9d8c722749e34482bc458"))
 (evil-snipe :source #1# :recipe
             (:package "evil-snipe" :repo "hlissner/evil-snipe"
                       :fetcher github :files
                       ("*.el" "*.el.in" "dir" "*.info" "*.texi"
                        "*.texinfo" "doc/dir" "doc/*.info"
                        "doc/*.texi" "doc/*.texinfo" "lisp/*.el"
                        "docs/dir" "docs/*.info" "docs/*.texi"
                        "docs/*.texinfo"
                        (:exclude ".dir-locals.el" "test.el"
                                  "tests.el" "*-test.el" "*-tests.el"
                                  "LICENSE" "README*" "*-pkg.el"))
                       :source #2# :protocol https :inherit t :depth
                       treeless :ref
                       "c2108d3932fcd2f75ac3e48250d6badd668f5b4f"))
 (evil-goggles :source #1# :recipe
               (:package "evil-goggles" :repo "edkolev/evil-goggles"
                         :fetcher github :files
                         ("*.el" "*.el.in" "dir" "*.info" "*.texi"
                          "*.texinfo" "doc/dir" "doc/*.info"
                          "doc/*.texi" "doc/*.texinfo" "lisp/*.el"
                          "docs/dir" "docs/*.info" "docs/*.texi"
                          "docs/*.texinfo"
                          (:exclude ".dir-locals.el" "test.el"
                                    "tests.el" "*-test.el"
                                    "*-tests.el" "LICENSE" "README*"
                                    "*-pkg.el"))
                         :source #2# :protocol https :inherit t :depth
                         treeless :ref
                         "34ca276a85f615d2b45e714c9f8b5875bcb676f3"))
 (evil-collection :source #1# :recipe
                  (:package "evil-collection" :fetcher github :repo
                            "emacs-evil/evil-collection" :files
                            (:defaults "modes") :source #2# :protocol
                            https :inherit t :depth treeless :ref
                            "fca81ddb2ca1ac3838aa7e8969b2313712807a45"))
 (evil :source #1# :recipe
       (:package "evil" :repo "emacs-evil/evil" :fetcher github :files
                 (:defaults "doc/build/texinfo/evil.texi"
                            (:exclude "evil-test-helpers.el"))
                 :source #2# :protocol https :inherit t :depth
                 treeless :ref
                 "682e87fce99f39ea3155f11f87ee56b6e4593304"))
 (which-key :source #1# :recipe
            (:package "which-key" :repo "justbur/emacs-which-key"
                      :fetcher github :files
                      ("*.el" "*.el.in" "dir" "*.info" "*.texi"
                       "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi"
                       "doc/*.texinfo" "lisp/*.el" "docs/dir"
                       "docs/*.info" "docs/*.texi" "docs/*.texinfo"
                       (:exclude ".dir-locals.el" "test.el" "tests.el"
                                 "*-test.el" "*-tests.el" "LICENSE"
                                 "README*" "*-pkg.el"))
                      :source #2# :protocol https :inherit t :depth
                      treeless :ref
                      "38d4308d1143b61e4004b6e7a940686784e51500"))
 (rainbow-mode :source #1# :recipe
               (:package "rainbow-mode" :repo
                         ("https://github.com/emacsmirror/gnu_elpa"
                          . "rainbow-mode")
                         :branch "externals/rainbow-mode" :files
                         ("*" (:exclude ".git")) :source #2# :protocol
                         https :inherit t :depth treeless :ref
                         "f7db3b5919f70420a91eb199f8663468de3033f3"))
 (diff-hl :source #1# :recipe
          (:package "diff-hl" :fetcher github :repo "dgutov/diff-hl"
                    :files
                    ("*.el" "*.el.in" "dir" "*.info" "*.texi"
                     "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi"
                     "doc/*.texinfo" "lisp/*.el" "docs/dir"
                     "docs/*.info" "docs/*.texi" "docs/*.texinfo"
                     (:exclude ".dir-locals.el" "test.el" "tests.el"
                               "*-test.el" "*-tests.el" "LICENSE"
                               "README*" "*-pkg.el"))
                    :source #2# :protocol https :inherit t :depth
                    treeless :ref
                    "9b032018fda8eb6c241bba1ec0e5c354ad523b2c"))
 (writeroom-mode :source #1# :recipe
                 (:package "writeroom-mode" :fetcher github :repo
                           "joostkremers/writeroom-mode" :files
                           ("*.el" "*.el.in" "dir" "*.info" "*.texi"
                            "*.texinfo" "doc/dir" "doc/*.info"
                            "doc/*.texi" "doc/*.texinfo" "lisp/*.el"
                            "docs/dir" "docs/*.info" "docs/*.texi"
                            "docs/*.texinfo"
                            (:exclude ".dir-locals.el" "test.el"
                                      "tests.el" "*-test.el"
                                      "*-tests.el" "LICENSE" "README*"
                                      "*-pkg.el"))
                           :source #2# :protocol https :inherit t
                           :depth treeless :ref
                           "cca2b4b3cfcfea1919e1870519d79ed1a69aa5e2"))
 (dashboard :source #1# :recipe
            (:package "dashboard" :fetcher github :repo
                      "emacs-dashboard/emacs-dashboard" :files
                      (:defaults "banners") :source #2# :protocol
                      https :inherit t :depth treeless :ref
                      "29b223d782a4479dc57904367b1fb940a2ffa8a4"))
 (rainbow-delimiters :source #1# :recipe
                     (:package "rainbow-delimiters" :fetcher github
                               :repo "Fanael/rainbow-delimiters"
                               :files
                               ("*.el" "*.el.in" "dir" "*.info"
                                "*.texi" "*.texinfo" "doc/dir"
                                "doc/*.info" "doc/*.texi"
                                "doc/*.texinfo" "lisp/*.el" "docs/dir"
                                "docs/*.info" "docs/*.texi"
                                "docs/*.texinfo"
                                (:exclude ".dir-locals.el" "test.el"
                                          "tests.el" "*-test.el"
                                          "*-tests.el" "LICENSE"
                                          "README*" "*-pkg.el"))
                               :source #2# :protocol https :inherit t
                               :depth treeless :ref
                               "f40ece58df8b2f0fb6c8576b527755a552a5e763"))
 (hl-todo :source #1# :recipe
          (:package "hl-todo" :repo "tarsius/hl-todo" :fetcher github
                    :files
                    ("*.el" "*.el.in" "dir" "*.info" "*.texi"
                     "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi"
                     "doc/*.texinfo" "lisp/*.el" "docs/dir"
                     "docs/*.info" "docs/*.texi" "docs/*.texinfo"
                     (:exclude ".dir-locals.el" "test.el" "tests.el"
                               "*-test.el" "*-tests.el" "LICENSE"
                               "README*" "*-pkg.el"))
                    :source #2# :protocol https :inherit t :depth
                    treeless :ref
                    "0ce21c329b686802121df45bf4ae15ae201137bf"))
 (doom-modeline :source #1# :recipe
                (:package "doom-modeline" :repo
                          "seagle0128/doom-modeline" :fetcher github
                          :files
                          ("*.el" "*.el.in" "dir" "*.info" "*.texi"
                           "*.texinfo" "doc/dir" "doc/*.info"
                           "doc/*.texi" "doc/*.texinfo" "lisp/*.el"
                           "docs/dir" "docs/*.info" "docs/*.texi"
                           "docs/*.texinfo"
                           (:exclude ".dir-locals.el" "test.el"
                                     "tests.el" "*-test.el"
                                     "*-tests.el" "LICENSE" "README*"
                                     "*-pkg.el"))
                          :source #2# :protocol https :inherit t
                          :depth treeless :ref
                          "a85cb28da8bcb29be232e21879f0f5a1e8551b8c"))
 (no-littering :source #1# :recipe
               (:package "no-littering" :fetcher github :repo
                         "emacscollective/no-littering" :files
                         ("*.el" "*.el.in" "dir" "*.info" "*.texi"
                          "*.texinfo" "doc/dir" "doc/*.info"
                          "doc/*.texi" "doc/*.texinfo" "lisp/*.el"
                          "docs/dir" "docs/*.info" "docs/*.texi"
                          "docs/*.texinfo"
                          (:exclude ".dir-locals.el" "test.el"
                                    "tests.el" "*-test.el"
                                    "*-tests.el" "LICENSE" "README*"
                                    "*-pkg.el"))
                         :source #2# :protocol https :inherit t :depth
                         treeless :ref
                         "ea15b1c607d4036ce37326bd5b4b2f4291ddfd60"))
 (general :source #1# :recipe
          (:package "general" :fetcher github :repo
                    "noctuid/general.el" :files
                    ("*.el" "*.el.in" "dir" "*.info" "*.texi"
                     "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi"
                     "doc/*.texinfo" "lisp/*.el" "docs/dir"
                     "docs/*.info" "docs/*.texi" "docs/*.texinfo"
                     (:exclude ".dir-locals.el" "test.el" "tests.el"
                               "*-test.el" "*-tests.el" "LICENSE"
                               "README*" "*-pkg.el"))
                    :source #2# :protocol https :inherit t :depth
                    treeless :ref
                    "826bf2b97a0fb4a34c5eb96ec2b172d682fd548f" :wait t))
 (org :source #1# :recipe
      (:package "org" :repo
                ("https://git.sr.ht/~bzg/org-mode" . "org") :pre-build
                (progn
                  (require 'elpaca-menu-org)
                  (setq elpaca-menu-org-make-manual t)
                  (elpaca-menu-org--build))
                :autoloads "org-loaddefs.el" :depth treeless :build
                (:not elpaca--generate-autoloads-async) :files
                (:defaults ("etc/styles/" "etc/styles/*" "doc/*.texi"))
                :source #2# :protocol https :inherit t :ref
                "452584d9db534071bf55a17330d63b76fe4a68f1" :wait t))
 (elpaca-use-package :source #1# :recipe
                     (:package "elpaca-use-package" :wait t :repo
                               "https://github.com/progfolio/elpaca.git"
                               :files
                               ("extensions/elpaca-use-package.el")
                               :main
                               "extensions/elpaca-use-package.el"
                               :build (:not elpaca--compile-info)
                               :source #2# :protocol https :inherit t
                               :depth treeless :ref
                               "1d299d7e3dde8a59b9f199d435ac92c16b7719e1"))
 (elpaca :source
   #1# :recipe
   (:source nil :protocol https :inherit ignore :depth 1 :repo
            "https://github.com/progfolio/elpaca.git" :ref
            "1d299d7e3dde8a59b9f199d435ac92c16b7719e1" :files
            (:defaults "elpaca-test.el" (:exclude "extensions"))
            :build (:not elpaca--activate-package) :package "elpaca")))
